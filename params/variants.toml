# Variants
[simple.v-turn-v-straight]
tag = "cv73"
sampler = 'AΛΔ'
description = 'Standard, straight `A`, `Λ`, `Δ`'
variant.A = "straight"
variant."grek/Lambda" = "straight"
variant."grek/Delta" = "straight"

[simple.v-turn-v-curly]
tag = "cv74"
sampler = 'AΛΔ'
description = 'Slightly curly `A`, `Λ`, `Δ`, like Iosevka 2.x'
variant.A = "curly"
variant."grek/Lambda" = "curly"
variant."grek/Delta" = "curly"

[simple.v-capital-b-standard]
tag = "VXAP"
sampler = 'B'
description = 'Standard `B`'
variant.B = 'standard'

[simple.v-capital-b-more-asymmetric]
tag = "VXAQ"
sampler = 'B'
description = 'More asymmetric `B` to differentiate with `8`'
variant.B = 'moreAsymmetric'

[simple.v-capital-d-standard]
tag = "VXBG"
sampler = 'D'
description = 'Standard `D`'
variant.D = 'standard'

[simple.v-capital-d-more-rounded]
tag = "VXBH"
sampler = 'D'
description = 'More rounded `D` to differentiate with `O`'
variant.D = 'moreRounded'

[simple.v-capital-g-tooth]
tag = "cv91"
sampler = "G"
description = "Toothed G"
variant.G = "toothed"

[simple.v-capital-g-toothless]
tag = "cv92"
sampler = "G"
description = "Toothless G"
variant.G = "toothless"

[simple.v-capital-j-serifless]
tag = 'VXBY'
sampler = 'J'
description = 'J without top serif'
variant.J = "serifless"

[simple.v-capital-j-serifed]
tag = 'VXBZ'
sampler = 'J'
description = 'J with top serif at left side'
variant.J = 'serifed'

[simple.v-capital-j-serifed-both-sides]
tag = 'VXDA'
sampler = 'J'
description = 'J with symmetric at both sides'
variant.J = 'serifedBothSides'

[simple.v-capital-j-serifed-symmetric]
tag = 'VXDB'
sampler = 'J'
description = 'J with symmetric at both sides and is symmetric'
variant.J = 'serifedSymmetric'

[simple.v-capital-m-hanging]
tag = 'VXCI'
sampler = 'M'
description = '`M` with middle being hanging off baseline'
variant.M = 'hanging'

[simple.v-capital-m-flat-bottom]
tag = 'VXCJ'
sampler = 'M'
description = '`M` with middle aligned to baseline'
variant.M = 'flatBottom'

[simple.v-capital-q-taily]
tag = 'cv42'
sampler = 'Q'
description = '`Q` with a curly tail'
variant.Q = 'taily'

[simple.v-capital-q-straight]
tag = 'cv43'
sampler = 'Q'
description = '`Q` with a straight tail like in the old versions'
variant.Q = 'straight'

[simple.v-capital-q-crossing]
tag = 'VXCA'
sampler = 'Q'
description = '`Q` with a tail crossing the ring'
variant.Q = 'crossing'

[simple.v-capital-r-straight]
tag = "cv82"
sampler = 'R'
description = 'Standard, straight-leg `R`'
variant.R = "straight"

[simple.v-capital-r-curly]
tag = "cv83"
sampler = 'R'
description = ' Slightly curly-legged `R`, like Iosevka 2.x'
variant.R = "curly"

[simple.v-capital-y-straight]
tag = "cv80"
sampler = 'Y'
description = 'Standard, straight `Y`'
variant.Y = "straight"

[simple.v-capital-y-curly]
tag = "cv81"
sampler = 'Y'
description = 'Slightly curly `Y`, like Iosevka 2.x'
variant.Y = "curly"

[simple.v-a-doublestorey]
tag = 'cv01'
sampler = 'a'
description = 'Double-storey `a`'
variant.a = 'doubleStorey'

[simple.v-a-singlestorey]
tag = 'cv02'
sampler = 'a'
description = 'Single-storey `a`'
variant.a = 'singleStorey'

[simple.v-a-singlestorey-tailed]
tag = 'VXBS'
sampler = 'a'
description = 'Single-storey `a` with curly tail'
variant.a = 'singleStoreyTailed'

[simple.v-a-doublestorey-tailed]
tag = 'VXBU'
sampler = 'a'
description = 'Double-storey `a` with curly tail'
variant.a = 'doubleStoreyTailed'

[simple.v-a-singlestorey-earless-corner]
tag = 'VXCL'
sampler = 'a'
description = 'Earless (cornered top-right) single-storey `a`'
variant.a = 'singleStoreyEarlessCorner'

[simple.v-a-singlestorey-earless-corner-tailed]
tag = 'VXCM'
sampler = 'a'
description = 'Earless (cornered top-right) single-storey `a` with curly tail'
variant.a = 'singleStoreyEarlessCornerTailed'

[simple.v-a-singlestorey-earless-rounded]
tag = 'VXCN'
sampler = 'a'
description = 'Earless (rounded top-right) single-storey `a`'
variant.a = 'singleStoreyEarlessRounded'

[simple.v-a-singlestorey-earless-rounded-tailed]
tag = 'VXCO'
sampler = 'a'
description = 'Earless (rounded top-right) single-storey `a` with curly tail'
variant.a = 'singleStoreyEarlessRoundedTailed'

[simple.v-a-doublestorey-toothless-corner]
tag = 'VXDM'
sampler = 'a'
description = 'Toothless (cornered bottom-right) double-storey `a`'
variant.a = 'doubleStoreyToothlessCorner'

[simple.v-a-doublestorey-toothless-rounded]
tag = 'VXDN'
sampler = 'a'
description = 'Toothless (rounded bottom-right) double-storey `a`'
variant.a = 'doubleStoreyToothlessRounded'

[simple.v-b-toothed]
tag = "VXBK"
sampler = 'b'
description = '`b` with bottom-left tooth'
variant.b = "toothed"

[simple.v-b-toothless-corner]
tag = "VXBL"
sampler = 'b'
description = '`b` without bottom-left tooth, with a corner transition'
variant.b = "toothlessCorner"

[simple.v-b-toothless-rounded]
tag = "VXBM"
sampler = 'b'
description = '`b` without bottom-left tooth, with a rounded transition'
variant.b = "toothlessRounded"

[simple.v-d-toothed]
tag = "VXBN"
sampler = 'd'
description = '`d` with bottom-right tooth'
variant.d = "toothed"

[simple.v-d-toothless-corner]
tag = "VXBO"
sampler = 'd'
description = '`d` without bottom-right tooth, with a corner transition'
variant.d = "toothlessCorner"

[simple.v-d-toothless-rounded]
tag = "VXBP"
sampler = 'd'
description = '`d` without bottom-right tooth, with a rounded transition'
variant.d = "toothlessRounded"

[simple.v-d-tailed]
tag = "VXBQ"
sampler = 'd'
description = '`d` with a slightly tail bottom-right tail'
variant.d = "tailed"

[simple.v-f-straight]
tag = "cv52"
sampler = 'f'
description = '`f` without bottom hook'
variant.f = "straight"

[simple.v-f-tailed]
tag = "cv53"
sampler = 'f'
description = '`f` with a leftward bottom hook'
variant.f = "tailed"

[simple.v-f-serifed]
tag = "cv84"
sampler = 'f'
description = '`f` with bottom serif'
variant.f = "serifed"

[simple.v-f-straight-tailed]
tag = "VXAD"
sampler = 'f'
description = '`f` with straight tail'
variant.f = "straightTailed"

[simple.v-f-flat-hook]
tag = "VXDD"
sampler = "f"
description = '`f` with flat hook'
variant.f = 'flatHook'

[simple.v-f-flat-hook-crossbar-at-x-height]
tag = "VXEG"
sampler = "f"
description = '`f` with flat hook and crossbar placed right at X-height'
variant.f = 'flatHookCrossbarAtXHeight'

[simple.v-f-flat-hook-serifed]
tag = "VXEV"
sampler = "f"
description = '`f` with flat hook and bottom serif'
variant.f = 'flatHookSerifed'

[simple.v-f-flat-hook-serifed-crossbar-at-x-height]
tag = "VXEW"
sampler = "f"
description = '`f` with flat hook, bottom serif, and crossbar placed right at X-height'
variant.f = 'flatHookSerifedCrossbarAtXHeight'

[simple.v-g-singlestorey]
tag = 'cv12'
sampler = 'g'
description = 'Single-storey `g`'
variant.g = 'singleStorey'

[simple.v-g-doublestorey]
tag = 'cv11'
sampler = 'g'
description = 'Double-storey `g`'
variant.g = 'doubleStorey'

[simple.v-g-opendoublestorey]
tag = 'cv24'
sampler = 'g'
description = 'Open Double-storey `g`, like Trebuchet MS or Fira Code'
variant.g = 'openDoubleStorey'

[simple.v-g-earless-corner]
tag = 'VXCW'
sampler = 'g'
description = 'Earless (cornered top-right) single-storey `g`'
variant.g = 'singleStoreyEarlessCorner'

[simple.v-g-earless-rounded]
tag = 'VXCX'
sampler = 'g'
description = 'Earless (rounded top-right) single-storey `g`'
variant.g = 'singleStoreyEarlessRounded'

[simple.v-h-straight]
tag = 'VXCB'
sampler = 'h'
description = '`h` with straight ending'
variant.h = 'straight'
variant.hhooktop = 'straight'

[simple.v-h-tailed]
tag = 'VXCC'
sampler = 'h'
description = '`h` with curly tailed ending'
variant.h = 'tailed'
variant.hhooktop = 'tailed'

[simple.v-h-motion-serifed-straight]
tag = 'VXEK'
sampler = 'h'
description = '`h` with straight ending'
variant.h = 'motionSerifedStraight'
variant.hhooktop = 'straight'

[simple.v-h-motion-serifed-tailed]
tag = 'VXEL'
sampler = 'h'
description = '`h` with curly tailed ending'
variant.h = 'motionSerifedTailed'
variant.hhooktop = 'tailed'

[simple.v-i-serifed]
tag = 'cv03'
sampler = 'i'
description = 'Serifed `i`'
variant.dotlessi = 'serifed'

[simple.v-i-italic]
tag = 'cv04'
sampler = 'i'
description = 'Italic `i`'
variant.dotlessi = 'italic'

[simple.v-i-hooky]
tag = 'cv05'
sampler = 'i'
description = 'Hooky `i`'
variant.dotlessi = 'hooky'

[simple.v-i-line]
tag = "cv56"
sampler = 'i'
description = '`i` like a straight line'
variant.dotlessi = "line"

[simple.v-i-zshaped]
tag = 'cv06'
sampler = 'i'
description = 'Z-shaped `i`'
variant.dotlessi = 'zshaped'

[simple.v-i-tailed]
tag = "cv88"
sampler = 'i'
description = "Tailed `i`"
variant.dotlessi = 'tailed'

[simple.v-i-hookybottom]
tag = "VXAA"
sampler = 'i'
description = "`i` with a straight tail"
variant.dotlessi = 'hookybottom'

[simple.v-i-serifed-asymmetric]
tag = "VXDK"
sampler = 'i'
description = "`i` with shorter top serif and full bottom serif"
variant.dotlessi = 'serifedAsymmetric'

[simple.v-j-line]
tag = "cv57"
sampler = 'j'
description = '`j` like a straight line'
variant.dotlessj = "line"

[simple.v-j-serifed]
tag = "cv58"
sampler = 'j'
description = '`j` with top serif'
variant.dotlessj = "serifed"

[simple.v-j-straight]
tag = "cv98"
sampler = 'j'
description = '`j` without serif'
variant.dotlessj = "straight"

[simple.v-j-flat-hook-serifed]
tag = 'VXDE'
sampler = 'j'
descender = '`j` with flat temrinal hook'
variant.dotlessj = "flatHookSerifed"

[simple.v-j-flat-hook-serifless]
tag = 'VXDF'
sampler = 'j'
descender = '`j` with flat temrinal hook and top serif'
variant.dotlessj = "flatHookSerifless"

[simple.v-k-straight]
tag = "cv68"
sampler = 'kK'
description = '`k` and `K` with standard shape'
variant.k = 'straight'
variant.K = 'straight'

[simple.v-k-curly]
tag = "cv69"
sampler = 'kK'
description = 'Slightly curly `k` and `K`, like Iosevka 2.x'
variant.k = 'curly'
variant.K = 'curly'

[simple.v-k-cursive]
tag = "cv70"
sampler = 'kK'
description = '`k` with a cursive loop, and `K` with standard shape'
variantUpright.k = 'straight'
variantUpright.K = 'straight'
variantItalic.k  = 'cursive'
variantItalic.K  = 'straight'

[simple.v-k-curly-cursive]
tag = "VXBR"
sampler = 'kK'
description = '`k` with a cursive loop, and `K` with curly shape'
variantUpright.k = 'curly'
variantUpright.K = 'curly'
variantItalic.k  = 'cursive'
variantItalic.K  = 'curly'

[simple.v-l-hooky]
tag = 'cv09'
sampler = 'l'
description = 'Hooky `l`'
variant.l = 'hooky'

[simple.v-l-zshaped]
tag = 'cv10'
sampler = 'l'
description = 'Z-shaped `l`'
variant.l = 'zshaped'

[simple.v-l-serifed]
tag = 'cv07'
sampler = 'l'
description = 'Serifed `l`'
variant.l = 'serifed'

[simple.v-l-italic]
tag = 'cv08'
sampler = 'l'
description = 'Italic, cursive `l`'
variant.l = 'italic'

[simple.v-l-line]
tag = "cv59"
sampler = 'l'
description = '`l` like a straight line'
variant.l = "line"

[simple.v-l-tailed]
tag = 'cv27'
sampler = 'l'
description = '`l` with a curved tail'
variant.l = 'tailed'

[simple.v-l-hookybottom]
tag = 'cv28'
sampler = 'l'
description = '`l` with a straight tail'
variant.l = 'hookybottom'

[simple.v-l-serifed-asymmetric]
tag = 'VXDL'
sampler = 'l'
description = '`l` with shorter top serif and full bottom serif'
variant.l = 'serifedAsymmetric'

[simple.v-m-normal]
tag = 'cv25'
sampler = 'm'
description = '`m` with normal middle leg, touching the baseline'
variant.m = 'normal'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-shortleg]
tag = 'cv26'
sampler = 'm'
description = '`m` with shorter middle leg, like Ubuntu Mono'
variant.m = 'shortleg'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-tailed]
tag = 'VXCD'
sampler = 'm'
description = '`m` with normal middle leg, touching the baseline, and a curly tail'
variant.m = 'tailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicTailed"

[simple.v-m-shortleg-tailed]
tag = 'VXCE'
sampler = 'm'
description = '`m` with shorter middle leg, like Ubuntu Mono, and a curly tail'
variant.m = 'shortlegTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicTailed"

[simple.v-m-earless-corner-double-arch]
tag = "VXDU"
sampler = "m"
description = "Earless (corner top-left) `m` with normal middle leg touching baseline"
variant.m = 'earlessCornerDoubleArch'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-corner-double-arch-shortleg]
tag = "VXDV"
sampler = "m"
description = "Earless (corner top-left) `m` with a shorter middle leg like Ubuntu Mono"
variant.m = 'earlessCornerDoubleArchShortleg'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-corner-double-arch-tailed]
tag = "VXDW"
sampler = "m"
description = "Earless (corner top-left) `m` with normal middle leg touching baseline, and a curly tail"
variant.m = 'earlessCornerDoubleArchTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-corner-double-arch-shortleg-tailed]
tag = "VXDX"
sampler = "m"
description = "Earless (corner top-left) `m` with a shorter middle leg like Ubuntu Mono, and a curly tail"
variant.m = 'earlessCornerDoubleArchShortlegTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-rounded-double-arch]
tag = "VXDY"
sampler = "m"
description = "Earless (rounded top-left) `m` with normal middle leg touching baseline"
variant.m = 'earlessRoundedDoubleArch'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-rounded-double-arch-shortleg]
tag = "VXDZ"
sampler = "m"
description = "Earless (rounded top-left) `m` with a shorter middle leg like Ubuntu Mono"
variant.m = 'earlessRoundedDoubleArchShortleg'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-rounded-double-arch-tailed]
tag = "VXEA"
sampler = "m"
description = "Earless (rounded top-left) `m` with normal middle leg touching baseline, and a curly tail"
variant.m = 'earlessRoundedDoubleArchTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-rounded-double-arch-shortleg-tailed]
tag = "VXEB"
sampler = "m"
description = "Earless (rounded top-left) `m` with a shorter middle leg like Ubuntu Mono, and a curly tail"
variant.m = 'earlessRoundedDoubleArchShortlegTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-single-arch]
tag = "VXEC"
sampler = "m"
description = "Earless (single-arch) `m` with normal middle leg touching baseline"
variant.m = 'earlessSingleArch'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-single-arch-shortleg]
tag = "VXED"
sampler = "m"
description = "Earless (single-arch) `m` with a shorter middle leg like Ubuntu Mono"
variant.m = 'earlessSingleArchShortleg'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-single-arch-tailed]
tag = "VXEE"
sampler = "m"
description = "Earless (single-arch) `m` with normal middle leg touching baseline, and a curly tail"
variant.m = 'earlessSingleArchTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-earless-single-arch-shortleg-tailed]
tag = "VXEF"
sampler = "m"
description = "Earless (single-arch) `m` with a shorter middle leg like Ubuntu Mono, and a curly tail"
variant.m = 'earlessSingleArchShortlegTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicNormal"

[simple.v-m-motion-serifed]
tag = "VXEM"
sampler = "m"
description = "`m` with motion serifs, normal middle leg touching baseline"
variant.m = 'motionSerifed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicMotionSerifed"

[simple.v-m-motion-serifed-shortleg]
tag = "VXEN"
sampler = "m"
description = "`m` with motion serifs, a shorter middle leg like Ubuntu Mono"
variant.m = 'motionSerifedShortleg'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicMotionSerifed"

[simple.v-m-motion-serifed-tailed]
tag = "VXEO"
sampler = "m"
description = "`m` with motion serifs, normal middle leg touching baseline, and a curly tail"
variant.m = 'motionSerifedTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicMotionSerifed"

[simple.v-m-motion-serifed-shortleg-tailed]
tag = "VXEP"
sampler = "m"
description = "`m` with motion serifs, a shorter middle leg like Ubuntu Mono, and a curly tail"
variant.m = 'motionSerifedShortlegTailed'
variantUpright."cyrl/te" = "upright"
variantItalic."cyrl/te" = "italicMotionSerifed"

[simple.v-n-straight]
tag = 'VXCF'
sampler = 'n'
description = '`n` with straight ending'
variant.n = 'straight'
variant.eng = 'straight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicStraight"

[simple.v-n-tailed]
tag = 'VXCG'
sampler = 'n'
description = '`n` with a curly tail'
variant.n = 'tailed'
variant.eng = 'straight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicTailed"

[simple.v-n-earless-corner-straight]
tag = 'VXDO'
sampler = 'n'
description = 'Earless (corner top-left) `n` with straight ending'
variant.n = 'earlessCornerStraight'
variant.eng = 'earlessCornerStraight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicEarlessCornerStraight"

[simple.v-n-earless-corner-tailed]
tag = 'VXDP'
sampler = 'n'
description = 'Earless (corner top-left) `n` with a curly tail'
variant.n = 'earlessCornerTailed'
variant.eng = 'earlessCornerStraight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicEarlessCornerTailed"

[simple.v-n-earless-rounded-straight]
tag = 'VXDQ'
sampler = 'n'
description = 'Earless (rounded top-left) `n` with straight ending'
variant.n = 'earlessRoundedStraight'
variant.eng = 'earlessRoundedStraight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicEarlessRoundedStraight"

[simple.v-n-earless-rounded-tailed]
tag = 'VXDR'
sampler = 'n'
description = 'Earless (rounded top-left) `n` with a curly tail'
variant.n = 'earlessRoundedTailed'
variant.eng = 'earlessRoundedStraight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicEarlessRoundedTailed"

[simple.v-n-motion-serifed-straight]
tag = 'VXEQ'
sampler = 'n'
description = '`n` with motion serifs and straight ending'
variant.n = 'motionSerifedStraight'
variant.eng = 'motionSerifedStraight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicMotionSerifedStraight"

[simple.v-n-motion-serifed-tailed]
tag = 'VXER'
sampler = 'n'
description = '`n` with motion serifs and a curly tail'
variant.n = 'motionSerifedTailed'
variant.eng = 'motionSerifedStraight'
variantUpright."cyrl/pe" = "upright"
variantItalic."cyrl/pe" = "italicMotionSerifedTailed"

[simple.v-p-eared]
tag = 'VXCP'
sampler = 'p'
description = '`p` with top-left ear'
variant.p = 'eared'

[simple.v-p-earless-corner]
tag = 'VXCQ'
sampler = 'p'
description = '`p` without top-left ear (corner)'
variant.p = 'earlessCorner'

[simple.v-p-earless-rounded]
tag = 'VXCR'
sampler = 'p'
description = '`p` without top-left ear (rounded)'
variant.p = 'earlessRounded'

[simple.v-p-motion-serifed]
tag = 'VXES'
sampler = 'p'
description = '`p` with motion serifs'
variant.p = 'motionSerifed'

[simple.v-q-straight]
tag = 'VXAZ'
sampler = 'q'
description = '`q` with straight bar'
variant.q = 'straight'

[simple.v-q-tailed]
tag = 'VXBA'
sampler = 'q'
description = '`q` with tail'
variant.q = 'tailed'

[simple.v-q-earless-corner]
tag = 'VXCS'
sampler = 'q'
description = 'Earless (cornered top-left) single-storey `q`'
variant.q = 'earlessCorner'

[simple.v-q-earless-corner-tailed]
tag = 'VXCT'
sampler = 'q'
description = 'Earless (cornered top-left) single-storey `q` with curly tail'
variant.q = 'earlessCornerTailed'

[simple.v-q-earless-rounded]
tag = 'VXCU'
sampler = 'q'
description = 'Earless (rounded top-left) single-storey `q`'
variant.q = 'earlessRounded'

[simple.v-q-earless-rounded-tailed]
tag = 'VXCV'
sampler = 'q'
description = 'Earless (rounded top-left) single-storey `q` with curly tail'
variant.q = 'earlessRoundedTailed'

[simple.v-r-straight]
tag = "cv85"
sampler = 'r'
description = 'Straight, serif-less `r`'
variant.r = "straight"
variant."turnrrtail" = "straight"
variant."rflap" = "straight"

[simple.v-r-serifed]
tag = "cv86"
sampler = 'r'
description = '`r` with serif at both top and bottom'
variant.r = "serifed"
variant."turnrrtail" = "serifed"
variant."rflap" = "serifed"

[simple.v-r-top-serifed]
tag = "cv87"
sampler = 'r'
description = '`r` with serifs at top-left only'
variant.r = "top-serifed"
variant."turnrrtail" = "top-serifed"
variant."rflap" = "straight"

[simple.v-r-earless-corner]
tag = "VXDS"
sampler = 'r'
description = 'Earless (corner top-left), serif-less `r`'
variant.r = "earlessCorner"
variant."turnrrtail" = "straight"
variant."rflap" = "straight"

[simple.v-r-earless-rounded]
tag = "VXDT"
sampler = 'r'
description = 'Earless (rounded top-left), serif-less `r`'
variant.r = "earlessRounded"
variant."turnrrtail" = "straight"
variant."rflap" = "straight"

[simple.v-t-standard]
tag = 'cv40'
sampler = 't'
description = 'Standard `t` shape'
variant.t = 'standard'

[simple.v-t-cross]
tag = 'cv41'
sampler = 't'
description = 'Futura-like `t` shape'
variant.t = 'cross'

[simple.v-t-flat-hook]
tag = "VXDC"
sampler = "t"
description = "`t` with flat hook"
variant.t = 'flatHook'

[simple.v-t-hookless-asymmetric]
tag = "VXEH"
sampler = "t"
description = "`t` without hook and ony half the cross bar"
variant.t = 'hooklessAsymmetric'

[simple.v-t-flat-hook-short-neck]
tag = "VXEI"
sampler = "t"
description = "`t` with flat hook and a slightly shorter neck"
variant.t = 'flatHookShortNeck'

[simple.v-t-flat-hook-short-neck2]
tag = "VXEJ"
sampler = "t"
description = "`t` with flat hook and a more shorter neck"
variant.t = 'flatHookShortNeck2'

[simple.v-u-with-bar]
tag = "cv89"
sampler = "u"
description = "Normal `u` with right bar"
variant.u = "withBar"
variantUpright."cyrl/i" = "upright"
variantItalic."cyrl/i" = "italicWithBar"
variantUpright."cyrl/sha" = "upright"
variantItalic."cyrl/sha" = "italicStraight"
variantUpright."cyrl/dzhe" = "upright"
variantItalic."cyrl/dzhe" = "italicStraight"

[simple.v-u-without-bar]
tag = "cv90"
sampler = "u"
description = "Normal `u` without right bar, like a smaller uppercase `U`"
variant.u = "withoutBar"
variantUpright."cyrl/i" = "upright"
variantItalic."cyrl/i" = "italicWithBar"
variantUpright."cyrl/sha" = "upright"
variantItalic."cyrl/sha" = "italicStraight"
variantUpright."cyrl/dzhe" = "upright"
variantItalic."cyrl/dzhe" = "italicStraight"

[simple.v-u-tailed]
tag = "VXBT"
sampler = "u"
description = "`u` with right bar and a slightly curly tail"
variant.u = "tailed"
variantUpright."cyrl/i" = "upright"
variantItalic."cyrl/i" = "italicTailed"
variantUpright."cyrl/sha" = "upright"
variantItalic."cyrl/sha" = "italicTailed"
variantUpright."cyrl/dzhe" = "upright"
variantItalic."cyrl/dzhe" = "italicTailed"

[simple.v-u-motion-serifed]
tag = "VXET"
sampler = "u"
description = "Normal `u` with right bar and motion serifs"
variant.u = "motionSerifed"
variantUpright."cyrl/i" = "upright"
variantItalic."cyrl/i" = "italicMotionSerifed"
variantUpright."cyrl/sha" = "upright"
variantItalic."cyrl/sha" = "italicMotionSerifed"
variantUpright."cyrl/dzhe" = "upright"
variantItalic."cyrl/dzhe" = "italicMotionSerifed"

[simple.v-u-motion-serifed-tailed]
tag = "VXEU"
sampler = "u"
description = "`u` with right bar, motion serifs and a slightly curly tail"
variant.u = "motionSerifedTailed"
variantUpright."cyrl/i" = "upright"
variantItalic."cyrl/i" = "italicMotionSerifedTailed"
variantUpright."cyrl/sha" = "upright"
variantItalic."cyrl/sha" = "italicMotionSerifedTailed"
variantUpright."cyrl/dzhe" = "upright"
variantItalic."cyrl/dzhe" = "italicMotionSerifedTailed"

[simple.v-v-straight]
tag = "cv71"
sampler = 'vV'
description = 'Standard, straight `V` and `v`'
variant.v = "straight"
variant.V = "straight"

[simple.v-v-curly]
tag = "cv72"
sampler = 'vV'
description = ' Slightly curly `V` and `v`, like Iosevka 2.x'
variant.v = "curly"
variant.V = "curly"

[simple.v-w-straight]
tag = "cv75"
sampler = 'wW'
description = 'Standard, straight `W` and `w`'
variant.W = "straight"
variant.w = "straight"

[simple.v-w-curly]
tag = "cv76"
sampler = 'wW'
description = 'Slightly curly `W` and `w`, like Iosevka 2.x'
variant.W = "curly"
variant.w = "curly"

[simple.v-w-straight-flat-top]
tag = "VXCH"
sampler = 'wW'
description = 'Standard, straight `W` and `w`, and the middle is forced to be aligned the top'
variant.W = "straightFlatTop"
variant.w = "straightFlatTop"

[simple.v-x-straight]
tag = "cv77"
sampler = 'xX'
description = 'Standard, straight `X` and `x`'
variant.X = "straight"
variant.x = "straight"

[simple.v-x-curly]
tag = "cv78"
sampler = 'xX'
description = 'Slightly curly `X` and `x`, like Iosevka 2.x'
variant.X = "curly"
variant.x = "curly"

[simple.v-y-straight]
tag = "cv48"
sampler = 'y'
description = 'Letter `y` that is fully straight'
variant.y = "straight"
variant."cyrl/U" = "straight"

[simple.v-y-straight-turn]
tag = "VXBF"
sampler = 'y'
description = 'Letter `y` with straight upper and a tail turns leftward'
variant.y = "straightTurn"
variant."cyrl/U" = "straightTurn"

[simple.v-y-curly]
tag = "cv79"
sampler = 'y'
description = 'More curly letter `y`, like Iosevka 2.x'
variant.y = "curly"
variant."cyrl/U" = "curly"

[simple.v-y-cursive]
tag = "cv49"
sampler = 'y'
description = 'Cursive-like `y`'
variant.y = "cursive"
variant."cyrl/U" = "straight"

[simple.v-z-standard]
tag = "VXBD"
sampler = 'z'
description = 'Standard `Z` and `z`'
variant.z = 'standard'
variant.Z = 'standard'

[simple.v-z-with-crossbar]
tag = "VXBE"
sampler = 'z'
description = '`Z` and `z` with a diagonal cross bar for better dsitinction with `2`'
variant.z = 'withCrossBar'
variant.Z = 'withCrossBar'

[simple.v-z-with-horizontal-crossbar]
tag = "VXBX"
sampler = 'z'
description = '`Z` and `z` with a horizontal cross bar for better dsitinction with `2`'
variant.z = 'withHorizontalCrossBar'
variant.Z = 'withHorizontalCrossBar'

[simple.v-eszet-traditional]
tag = 'cv34'
sampler = 'ß'
description = 'Traditional, Fraktur-like Eszet'
variant.eszet = 'traditional'

[simple.v-eszet-sulzbacher]
tag = 'cv35'
sampler = 'ß'
description = 'A more modern, beta-like Eszet'
variant.eszet = 'sulzbacher'

[simple.v-eszet-longs-s-lig]
tag = 'VXAC'
sampler = 'ß'
description = 'An Eszet shown as a ligature of long-S (`ſ`) and `s`'
variant.eszet = 'longsslig'

[simple.v-lambda-straight]
tag = "cv94"
sampler = 'λ'
description = 'More-straight letter `λ`'
variant."grek/lambda" = "straight"

[simple.v-lambda-curly]
tag = "cv95"
sampler = 'λ'
description = 'More curly letter `λ`, like Iosevka 2.x'
variant."grek/lambda" = "curly"

[simple.v-zero-slashed]
tag = 'cv13'
sampler = '0'
description = 'Slashed Zero `0`'
variant.zero = 'slashed'

[simple.v-zero-dotted]
tag = 'cv14'
sampler = '0'
description = 'Dotted Zero `0`'
variant.zero = 'dotted'

[simple.v-zero-unslashed]
tag = 'cv15'
sampler = '0'
description = 'O-like `0`'
variant.zero = 'unslashed'

[simple.v-zero-reverse-slashed]
tag = 'cv93'
sampler = '0'
description = 'Reverse-slashed `0`'
variant.zero = 'reverse-slashed'

[simple.v-zero-long-dotted]
tag = 'VXAB'
sampler = '0'
description = 'Long-dotted Zero `0` like Hack'
variant.zero = 'longDotted'

[simple.v-one-nobase]
tag = "cv50"
sampler = '1'
description = '`1` with bottom serif'
variant.one = "nobase"

[simple.v-one-base]
tag = "cv51"
sampler = '1'
description = '`1` without bottom serif'
variant.one = "base"

[simple.v-one-line]
tag = "VXAM"
sampler = '1'
description = '`1` drawn just like a straight line'
variant.one = "line"

[simple.v-three-flattop]
tag = 'cv46'
sampler = '3'
description = 'Flat top `3` (Like Museo Sans / Montserrat)'
variant.three = 'flattop'

[simple.v-three-twoarcs]
tag = 'cv47'
sampler = '3'
description = 'Arched top `3`'
variant.three = 'twoarcs'

[simple.v-four-closed]
tag = 'VXAR'
sampler = '4'
description = '`4` with closed contour'
variant.four = 'closed'

[simple.v-four-closed-non-crossing]
tag = 'VXAS'
sampler = '4'
description = '`4` with closed contour but the horizontal bar does not overflow the vertical bar'
variant.four = 'closedNonCrossing'

[simple.v-four-semi-open]
tag = 'VXAT'
sampler = '4'
description = '`4` with semi-open contour'
variant.four = 'semiOpen'

[simple.v-four-semi-open-non-crossing]
tag = 'VXAU'
sampler = '4'
description = '`4` with semi-open contour but the horizontal bar does not overflow the vertical bar'
variant.four = 'semiOpenNonCrossing'

[simple.v-four-open]
tag = 'VXAV'
sampler = '4'
description = '`4` with open contour'
variant.four = 'open'

[simple.v-four-open-non-crossing]
tag = 'VXAW'
sampler = '4'
description = '`4` with open contour but the horizontal bar does not overflow the vertical bar'
variant.four = 'openNonCrossing'

[simple.v-six-closed-contour]
tag = "VXAE"
sampler = '6'
description = '`6` with a more closed contour'
variant.six = "closedContour"

[simple.v-six-open-contour]
tag = "VXAF"
sampler = '6'
description = '`6` with a more open contour'
variant.six = "openContour"

[simple.v-six-straight-bar]
tag = "VXBB"
sampler = '6'
description = '`6` with a straight bar'
variant.six = "straightBar"

[simple.v-seven-noserif]
tag = "cv64"
sampler = '7'
description = '`7` without serif'
variant.seven = "noserif"

[simple.v-seven-serifed]
tag = "cv65"
sampler = '7'
description = '`7` with initial serif'
variant.seven = "serifed"

[simple.v-seven-crossbar]
tag = "VXAX"
sampler = '7'
description = '`7` with crossbar'
variant.seven = "crossbar"

[simple.v-seven-crossbar-serifed]
tag = "VXAY"
sampler = '7'
description = '`7` with crossbar and initial serif'
variant.seven = "crossbarSerifed"

[simple.v-nine-closed-contour]
tag = "cv96"
sampler = '9'
description = '`9` with a more closed contour'
variant.nine = "closedContour"

[simple.v-nine-open-contour]
tag = "cv97"
sampler = '9'
description = '`9` with a more open contour'
variant.nine = "openContour"

[simple.v-nine-straight-bar]
tag = "VXBC"
sampler = '9'
description = '`9` with a straight bar'
variant.nine = "straightBar"

[simple.v-tilde-high]
tag = 'cv16'
sampler = '~'
description = 'Higher tilde `~`'
variant.asciiTilde = 'high'

[simple.v-tilde-low]
tag = 'cv17'
sampler = '~'
description = 'Lower tilde `~`'
variant.asciiTilde = 'low'

[simple.v-asterisk-high]
tag = 'cv18'
sampler = '*'
description = 'Higher five-pointed asterisk `*`'
variant.asterisk = 'high'

[simple.v-asterisk-low]
tag = 'cv19'
sampler = '*'
description = 'Lower five-pointed asterisk `*`'
variant.asterisk = 'low'

[simple.v-asterisk-hexhigh]
tag = "cv60"
sampler = "*"
description = 'Higher six-pointed asterisk `*`'
variant.asterisk = "hexhigh"

[simple.v-asterisk-hexlow]
tag = "cv61"
sampler = "*"
description = 'Lower six-pointed asterisk `*`'
variant.asterisk = "hexlow"

[simple.v-asterisk-flip-penta-high]
tag = 'VXBV'
sampler = '*'
description = 'Higher five-pointed and turned asterisk `*`'
variant.asterisk = 'turnPentaHigh'

[simple.v-asterisk-flip-penta-low]
tag = 'VXBW'
sampler = '*'
description = 'Lower five-pointed and turned asterisk `*`'
variant.asterisk = 'turnPentaLow'

[simple.v-underscore-high]
tag = 'cv20'
sampler = '_'
description = 'Higher underscore `_`, placed right below baseline'
variant.underscore = 'high'

[simple.v-underscore-low]
tag = 'cv21'
sampler = '_'
description = 'Lower underscore `_`, placed right above descender line'
variant.underscore = 'low'

[simple.v-underscore-above-baseline]
tag = 'cv99'
sampler = '_'
description = 'Extra-high `_`, placed right below baseline'
variant.underscore = 'aboveBaseline'

[simple.v-paragraph-high]
tag = 'cv22'
sampler = '¶'
description = 'Higher paragraph symbol `¶`'
variant.paragraph = 'high'
variant.revertParagraph = 'high'

[simple.v-paragraph-low]
tag = 'cv23'
sampler = '¶'
description = 'Lower paragraph symbol `¶`'
variant.paragraph = 'low'
variant.revertParagraph = 'low'

[simple.v-caret-high]
tag = 'cv29'
sampler = '^'
description = 'Higher circumflex `^`'
variant.asciiCaret = 'high'

[simple.v-caret-low]
tag = 'cv30'
sampler = '^'
description = 'Lower circumflex `^`'
variant.asciiCaret = 'low'

[simple.v-paren-normal]
tag = 'VXAN'
sampler = '( )'
description = 'Parenthesis with normal contour'
variant.parenLeft = 'normal'
variant.parenRight = 'normal'

[simple.v-paren-large-contour]
tag = 'VXAO'
sampler = '( )'
description = 'Parenthesis with larger contour, like that in Monaco'
variant.parenLeft = 'largeContour'
variant.parenRight = 'largeContour'

[simple.v-brace-straight]
tag = 'cv36'
sampler = '{ }'
description = 'More straight braces'
variant.braceLeft = 'straight'
variant.braceRight = 'straight'

[simple.v-brace-curly]
tag = 'cv37'
sampler = '{ }'
description = 'More curly braces'
variant.braceLeft = 'curly'
variant.braceRight = 'curly'

[simple.v-numbersign-upright]
tag = 'cv44'
sampler = '#'
description = 'Number sign with vertical bars'
variant.numbersign = 'upright'

[simple.v-numbersign-slanted]
tag = 'cv45'
sampler = '#'
description = 'Number sign with slanted bars'
variant.numbersign = 'slanted'

[simple.v-numbersign-upright-open]
tag = 'VXBI'
sampler = '#'
description = 'Number sign with vertical bars and open inner'
variant.numbersign = 'uprightOpen'

[simple.v-numbersign-slanted-open]
tag = 'VXBJ'
sampler = '#'
description = 'Number sign with slanted bars and open inner'
variant.numbersign = 'slantedOpen'

[simple.v-ampersand-closed]
tag = 'VXAG'
sampler = '&'
description = 'Ampersand (`&`) with a closed contour'
variant.ampersand = 'closed'

[simple.v-ampersand-upper-open]
tag = 'VXAH'
sampler = '&'
description = 'Ampersand (`&`) with an open contour at upper half'
variant.ampersand = 'upperOpen'

[simple.v-ampersand-lower-open]
tag = 'VXAI'
sampler = '&'
description = 'Ampersand (`&`) with an open contour at lower half'
variant.ampersand = 'lowerOpen'

[simple.v-ampersand-et]
tag = 'VXAJ'
sampler = '&'
description = 'Ampersand (`&`) drawn like a ligature of Ɛ and t'
variant.ampersand = 'et'

[simple.v-ampersand-et-toothed]
tag = 'VXAK'
sampler = '&'
description = 'Ampersand (`&`) drawn like a ligature of Ɛ and t with tooth'
variant.ampersand = 'etToothed'

[simple.v-ampersand-flat-top]
tag = 'VXAL'
sampler = '&'
description = 'Ampersand (`&`) drawn with a flat top'
variant.ampersand = 'flatTop'

[simple.v-at-threefold]
tag = 'cv31'
sampler = '@'
description = 'The long, three-fold At symbol (`@`)'
variant.at = 'threefold'

[simple.v-at-fourfold]
tag = 'cv32'
sampler = '@'
description = 'The traditional, four-fold At symbol (`@`)'
variant.at = 'fourfold'

[simple.v-at-short]
tag = 'cv33'
sampler = '@'
description = 'The shorter, Fira-like At symbol (`@`)'
variant.at = 'short'

[simple.v-dollar-open]
tag = 'cv38'
sampler = '$'
description = 'Dollar symbol with open contour'
variant.dollar = 'open'

[simple.v-dollar-through]
tag = 'cv39'
sampler = '$'
description = 'Dollar symbol with strike-through vertical bar'
variant.dollar = 'through'

[simple.v-dollar-opencap]
tag = "cv54"
sampler = '$'
description = 'Dollar symbol with open contour, not exceeding baseline and ascender'
variant.dollar = "opencap"

[simple.v-dollar-throughcap]
tag = "cv55"
sampler = '$'
description = 'Dollar symbol with strike-through vertical bar, not exceeding baseline and ascender'
variant.dollar = "throughcap"

[simple.v-percent-dots]
tag = "cv62"
sampler = '%'
description = 'Percent `%`, Per-mille `‰` and basis point `‱` using rectangular dots'
variant.percent = "dots"

[simple.v-percent-rings]
tag = "cv63"
sampler = '%'
description = 'Percent `%` with rings and broken bar; Per-mille `‰` and basis point `‱` with rings'
variant.percent = "rings"

[simple.v-bar-natural-slope]
tag = "VXCY"
sampler = '|'
description = 'Bar punctuations (`|`) has a natural slope under italics and oblique'
variantUpright.bar = "naturalSlope"
variantItalic.bar = "naturalSlope"

[simple.v-bar-force-upright]
tag = "VXCZ"
sampler = '|'
description = 'Bar punctuations (`|`) is forced upright under italics and oblique'
variantUpright.bar = "naturalSlope"
variantItalic.bar = "forceUpright"

[simple.v-percent-rings-connected]
tag = "VXCK"
sampler = '%'
description = 'Percent `%`, Per-mille `‰` and basis point `‱` using rings and continuous bar'
variant.percent = "ringsConnected"

[simple.v-lig-ltgteq-flat]
tag = "cv66"
sampler = '<= >='
description = 'The lower bar of `<=` and `>=` ligation is flat'
variant."eq.at-lteq.lig2" = "flat"
variant."eq.at-gteq.lig2" = "flat"

[simple.v-lig-ltgteq-slanted]
tag = "cv67"
sampler = '<= >='
description = 'The lower bar of `<=` and `>=` ligation is slanted'
variant."eq.at-lteq.lig2" = "slanted"
variant."eq.at-gteq.lig2" = "slanted"

[simple.v-ascii-quote-straight]
tag = 'VXDG'
sampler = "'"
description = "Show ASCII quote (`'`) as short vertical straight bar."
variant.asciiSingleQuote = 'straight'

[simple.v-ascii-quote-raised-comma]
tag = 'VXDH'
sampler = "'"
description = "Show ASCII quote (`'`) as raised comma."
variant.asciiSingleQuote = 'raisedComma'

[simple.v-ascii-grave-straight]
tag = 'VXDI'
sampler = "`"
description = "Show ASCII grave (`` ` ``) as short diagonal straight bar."
variant.asciiGrave = 'straight'

[simple.v-ascii-grave-raised-inverse-comma]
tag = 'VXDJ'
sampler = "`"
description = "Show ASCII grave (`` ` ``) as raised comma."
variant.asciiGrave = 'raisedInverseComma'

########## "Untagged" variants, used for Aile, etc.

[simple.v-capital-i-straight]
variant.I = "line" # set on purpose to use II diversity

[simple.v-capital-i-serifed]
variant.I = "serifed"

[simple.v-f-narrow]
variant.f = 'narrow'

[simple.v-t-narrow]
variant.t = 'narrow'

[simple.v-j-narrow]
variant.dotlessj = "narrow"

[simple.v-j-narrow-serifed]
variant.dotlessj = "narrowSerifed"

[simple.v-r-narrow]
variant.r = "narrow"
variant."turnrrtail" = "narrow"
variant."rflap" = "narrow"

###################################################################################################

[default]
design = [
	# Capitals
	'v-capital-b-standard',
	'v-capital-d-standard',
	'v-capital-g-tooth',
	'v-capital-i-serifed',
	'v-capital-j-serifed',
	'v-capital-m-hanging',
	'v-capital-q-taily',
	'v-capital-r-straight',
	'v-capital-y-straight',
	# Lowers
	'v-b-toothed',
	'v-g-singlestorey',
	'v-p-eared',
	'v-q-straight',
	'v-r-straight',
	'v-t-standard',
	'v-v-straight',
	'v-w-straight',
	'v-x-straight',
	'v-z-standard',
	# Non-latin
	'v-turn-v-straight',
	'v-eszet-sulzbacher',
	'v-lambda-straight',
	# Digits
	'v-zero-slashed',
	'v-one-nobase',
	'v-three-twoarcs',
	'v-four-closed',
	'v-six-straight-bar',
	'v-seven-noserif',
	'v-nine-straight-bar',
	# Symbols
	'v-tilde-low',
	'v-asterisk-high',
	'v-paragraph-high',
	'v-caret-high',
	'v-underscore-high',
	'v-at-threefold',
	'v-paren-normal',
	'v-brace-curly',
	'v-dollar-through',
	'v-numbersign-upright',
	'v-percent-rings',
	'v-lig-ltgteq-flat',
	'v-ampersand-closed',
	'v-bar-natural-slope',
	'v-ascii-quote-straight',
	'v-ascii-grave-straight',
	# m, n, h has tailed variant, but not very ideal
	# Do not make them default
	'v-h-straight',
	'v-m-normal',
	'v-n-straight',
	# Others
	'others',
]
upright = [
	'v-a-doublestorey',
	'v-d-toothed',
	'v-f-straight',
	'v-i-serifed',
	'v-j-serifed',
	'v-k-straight',
	'v-l-serifed',
	'v-u-with-bar',
	'v-y-straight',
]
italic = [
	'v-a-singlestorey-tailed',
	'v-d-tailed',
	'v-f-tailed',
	'v-i-italic',
	'v-j-serifed',
	'v-k-cursive',
	'v-l-italic',
	'v-u-tailed',
	'v-y-cursive',
]

[composite.slab]
design = ['v-one-base', 'v-seven-serifed']
upright = ['v-f-serifed', 'v-r-serifed', 'v-y-straight-turn']
italic =  ['v-f-tailed', 'v-r-top-serifed', 'v-y-cursive']

# Composite character options, overrides default settings above.
[composite.ss01]
description = "Andale Mono Style"
design = ['v-i-hooky', 'v-a-doublestorey', 'v-g-doublestorey', 'v-k-straight', 'v-l-zshaped', 'v-y-straight-turn', 'v-at-fourfold', 'v-zero-dotted', 'v-g-doublestorey', 'v-brace-straight', 'v-underscore-low', 'v-numbersign-slanted', 'v-asterisk-hexhigh', 'v-one-base', 'v-six-open-contour', 'v-nine-open-contour']

[composite.ss02]
description = "Anonymous Pro Style"
design = ['v-at-fourfold', 'v-a-doublestorey', 'v-brace-straight', 'v-k-straight', 'v-l-serifed', 'v-i-serifed', 'v-y-straight-turn', 'v-asterisk-hexlow', 'v-one-base', 'v-seven-serifed', 'v-six-closed-contour', 'v-nine-closed-contour']

[composite.ss03]
description = 'Consolas Style'
design = ['v-at-fourfold', 'v-underscore-low', 'v-brace-straight', 'v-numbersign-slanted', 'v-asterisk-hexhigh', 'v-one-base', 'v-six-open-contour', 'v-nine-open-contour']
upright = ['v-g-doublestorey', 'v-y-straight-turn']
italic = ['v-g-singlestorey', 'v-y-cursive']

[composite.ss04]
description = 'Menlo Style'
design = ['v-at-threefold', 'v-a-doublestorey', 'v-underscore-low', 'v-i-serifed', 'v-k-straight', 'v-l-italic', 'v-y-straight-turn', 'v-brace-straight', 'v-numbersign-slanted', 'v-asterisk-hexlow', 'v-one-base', 'v-ampersand-upper-open', 'v-six-closed-contour', 'v-nine-closed-contour']

[composite.ss05]
description = 'Fira Mono Style'
design = ['v-at-short', 'v-underscore-low', 'v-a-doublestorey', 'v-g-opendoublestorey', 'v-i-serifed', 'v-k-straight', 'v-l-italic', 'v-y-straight-turn', 'v-numbersign-slanted', 'v-zero-dotted', 'v-one-base', 'v-ampersand-et', 'v-four-semi-open', 'v-six-closed-contour', 'v-nine-open-contour']

[composite.ss06]
description = 'Liberation Mono Style'
design = ['v-at-fourfold', 'v-a-doublestorey', 'v-i-serifed', 'v-k-straight', 'v-l-serifed', 'v-y-straight-turn', 'v-brace-straight', 'v-zero-dotted', 'v-numbersign-slanted', 'v-one-base', 'v-six-closed-contour', 'v-nine-closed-contour']

[composite.ss07]
description = 'Monaco Style'
design = ['v-at-fourfold', 'v-a-singlestorey', 'v-i-zshaped', 'v-k-straight', 'v-l-zshaped', 'v-y-straight-turn', 'v-brace-straight', 'v-numbersign-slanted', 'v-asterisk-hexhigh', 'v-one-base', 'v-paren-large-contour', 'v-six-closed-contour', 'v-nine-closed-contour']

[composite.ss08]
description = 'Pragmata Pro Style'
design = ['v-at-threefold', 'v-a-doublestorey', 'v-l-serifed', 'v-i-serifed', 'v-asterisk-low', 'v-zero-dotted', 'v-brace-straight', 'v-dollar-open', 'v-underscore-low', 'v-numbersign-slanted', 'v-percent-dots', 'v-v-curly', 'v-turn-v-curly', 'v-w-curly', 'v-x-curly', 'v-capital-y-curly', 'v-capital-r-curly', 'v-k-curly', 'v-y-curly', 'v-lambda-curly', 'v-ampersand-upper-open', 'v-six-closed-contour', 'v-nine-closed-contour']
upright = ['v-g-doublestorey']
italic  = ['v-g-singlestorey']

[composite.ss09]
description = 'Source Code Pro Style'
design = ['v-at-threefold', 'v-k-straight', 'v-l-italic', 'v-y-straight-turn', 'v-asterisk-low', 'v-zero-dotted', 'v-dollar-open', 'v-numbersign-slanted', 'v-one-base', 'v-six-closed-contour', 'v-nine-closed-contour']
upright = ['v-i-hooky', 'v-g-doublestorey']
italic = ['v-g-singlestorey']

[composite.ss10]
description = 'Envy Code R Style'
design = ['v-at-threefold', 'v-a-doublestorey', 'v-underscore-low', 'v-i-hooky', 'v-k-straight', 'v-l-hooky', 'v-y-cursive', 'v-asterisk-low', 'v-one-base', 'v-nine-straight-bar', 'v-six-straight-bar']

[composite.ss11]
description = 'X Window Style'
design = ['v-zero-unslashed', 'v-tilde-high', 'v-brace-straight', 'v-dollar-through', 'v-three-flattop', 'v-at-threefold', 'v-one-base', 'v-six-closed-contour', 'v-nine-closed-contour']

[composite.ss12]
description = 'Ubuntu Mono Style'
design = ['v-at-threefold', 'v-a-doublestorey', 'v-f-straight', 'v-underscore-low', 'v-i-italic', 'v-k-straight', 'v-l-italic', 'v-m-shortleg', 'v-y-straight-turn', 'v-brace-straight', 'v-zero-dotted', 'v-one-base', 'v-numbersign-slanted', 'v-six-open-contour', 'v-nine-open-contour']

[composite.ss13]
description = 'Lucida Style'
design = ['v-i-hooky', 'v-k-straight', 'v-l-hooky', 'v-y-straight-turn', 'v-zero-dotted', 'v-underscore-low', 'v-caret-low', 'v-numbersign-slanted', 'v-one-base', 'v-six-closed-contour', 'v-nine-closed-contour']

[composite.ss14]
description = 'JetBrains Mono Style'
design = ['v-i-serifed', 'v-k-straight', 'v-l-italic', 'v-u-without-bar', 'v-zero-long-dotted', 'v-three-flattop', 'v-capital-q-straight', 'v-asterisk-low', 'v-one-base', 'v-seven-serifed', 'v-ampersand-upper-open', 'v-four-semi-open-non-crossing', 'v-nine-straight-bar', 'v-six-straight-bar']

[composite.ss20]
description = 'Curly Style'
design = ['v-v-curly', 'v-turn-v-curly', 'v-w-curly', 'v-x-curly', 'v-capital-y-curly', 'v-capital-r-curly', 'v-lambda-curly', 'v-six-open-contour', 'v-nine-open-contour']
upright = ['v-k-curly', 'v-y-curly']
italic  = ['v-k-cursive', 'v-y-cursive']
